1.递归法：    
    
public Node reverse(Node head) {
    if (head == null || head.next == null)
        return head;
    Node temp = head.next;
    Node newHead = reverse(head.next);
    temp.next = head;
    head.next = null;
    return newHead;
}

一个递归过程：1->2->3->4：
程序到达Node newHead = reverse(head.next);时进入递归
我们假设此时递归到了3结点，此时head=3结点，temp=3结点.next(实际上是4结点)
执行Node newHead = reverse(head.next);传入的head.next是4结点，返回的newHead是4结点。
接下来就是弹栈过程了
程序继续执行 temp.next = head就相当于4->3
head.next = null 即把3结点指向4结点的指针断掉。
返回新链表的头结点newHead
